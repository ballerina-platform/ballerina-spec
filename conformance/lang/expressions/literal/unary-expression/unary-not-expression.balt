Test-Case: output
Description: Test unary not operations.
Labels: function-defn, unary-not

public function main() {
    io:println(!false); // @output true

    boolean a1 = !false;
    io:println(a1); // @output true

    io:println(!a1); // @output false

    io:println(!!false); // @output false

    io:println(!true is boolean); // @output true

    io:println(getNegation(true)); // @output false
}

public function getNegation(boolean bool) returns boolean {
    return !bool;
}

Test-Case: output
Description: Test unary not operations at module level.
Labels: const, unary-not

boolean notFalse = !false;
var notTrue = !true;

const boolean CONST1 = !false;
const boolean CONST2 = !CONST1;
const boolean CONST3 = !!false;

public function main() {
    io:println(notFalse); // @output true

    io:println(notTrue is boolean); // @output true

    io:println(CONST1); // @output true

    io:println(CONST2); // @output false

    io:println(CONST3); // @output false
}

Test-Case: error
Description: Test unary not expression assignments resulting in an error.
Labels: boolean, module-type-defn, unary-not

type SwitchOn true|1;

const boolean CONST4 = !false;

public function main() {
    string x5 = !CONST4; // @error static type of unary-not expression is boolean

    int x6 = !false; // @error static type of unary-not expression is boolean

    boolean x1 = true;
    SwitchOn x2 = !x1; // @error static type of unary-not expression is boolean
}

Test-Case: error
Description: Test the static type of operand belonging to non-boolean type resulting in an error.
Labels: function-defn, module-type-defn, optional-type, tuple-type, unary-not

type BooleanValue true|false;

public function main() {
    io:println(!1); // @error unary-not is not defined for int

    boolean x7 = !getBooleanOrNil(); // @error unary-not is not defined for boolean?

    [boolean, boolean] booleanTuple = [true, false];
    boolean x8 = !booleanTuple; // @error unary-not is not defined for tuple

    BooleanValue bool = true;
    io:println(!bool); // @error unary-not is not defined for user defined type

}

function getBooleanOrNil() returns boolean? {
    return false;
}
